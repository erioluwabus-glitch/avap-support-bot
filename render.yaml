services:
  - type: web
    name: avap-support-bot
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn avap_bot.bot:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health_check
    autoDeploy: true
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      # Google Sheets Configuration
      - key: GOOGLE_CREDENTIALS_JSON
        fromSecret: google_credentials_json
      - key: GOOGLE_SHEET_ID
        fromSecret: google_sheet_id
      # Alternative: Use GOOGLE_SHEET_URL if you have the full URL
      # - key: GOOGLE_SHEET_URL
      #   fromSecret: google_sheet_url
      # Systeme.io Configuration
      - key: SYSTEME_API_KEY
        fromSecret: systeme_api_key
      - key: SYSTEME_ACHIEVER_TAG_ID
        fromSecret: systeme_achiever_tag_id
      # Supabase Configuration
      - key: SUPABASE_URL
        fromSecret: supabase_url
      - key: SUPABASE_KEY
        fromSecret: supabase_key
      # Bot Configuration
      - key: BOT_TOKEN
        fromSecret: bot_token
      - key: TELEGRAM_BOT_TOKEN
        fromSecret: telegram_bot_token
      - key: WEBHOOK_URL
        fromSecret: webhook_url
      # Telegram Group IDs (get from @userinfobot)
      - key: ASSIGNMENT_GROUP_ID
        fromSecret: assignment_group_id
      - key: SUPPORT_GROUP_ID
        fromSecret: support_group_id
      - key: VERIFICATION_GROUP_ID
        fromSecret: verification_group_id
      - key: QUESTIONS_GROUP_ID
        fromSecret: questions_group_id
      # Optional: Set persistent storage for CSV fallback
      - key: STABLE_BACKUP_DIR
        value: /opt/render/persistent/csv_backup
      # Memory management settings
      - key: RSS_LIMIT_MB
        value: "600"
      - key: WATCHDOG_WARMUP
        value: "45"
    scaling:
      minInstances: 1
      maxInstances: 1